{"version":3,"sources":["components/Container/Container.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","title","children","className","s","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","preventDefault","newContact","id","shortid","generate","contactForm","label","input","type","autoComplete","onChange","placeholder","pattern","required","submitButton","prototypes","PropTypes","func","Filter","filter","onChangeFilter","ContactList","contacts","onDeleteContact","list","map","contact","item","buttonDelete","onClick","color","size","App","setContacts","setFilter","useEffect","contactsLocal","localStorage","getItem","JSON","parse","contactsJson","window","setItem","stringify","removeCoontactFromList","idRemoveContact","data","currentTarget","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab79c695.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__AYqVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3uGOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3Ucwc\",\"label\":\"ContactForm_label__2dtQN\",\"input\":\"ContactForm_input__2mTd2\",\"submitButton\":\"ContactForm_submitButton__1QLZU\"};","import PropTypes from 'prop-types';\nimport s from '../Container/Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      <h2> {title}</h2>\n\n      {children}\n    </div>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\n\n import React, { useState } from 'react';\nimport shortid from 'shortid';\nimport s from '../ContactForm/ContactForm.module.css';\n\nfunction ContactForm ({onSubmit})  {\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n\n    const { name, value } = e.target;\n\n    switch (name) {\n      \n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;      \n\n      default:\n        return;\n    } \n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name: name,\n      number: number,\n      id: shortid.generate(),\n    };\n\n    \n    onSubmit(newContact);\n    reset();\n  };\n\n      return (\n      <form onSubmit={handleSubmit} className={s.contactForm}>\n        <label className={s.label}>\n          Name:\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            autoComplete=\"off\"\n            value={name}\n            onChange={handleChange}\n            placeholder=\"Tom Smit\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label className={s.label}>\n          Number:\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            autoComplete=\"off\"\n            value={number}\n            onChange={handleChange}\n            placeholder=\"050-50-50\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <input className={s.submitButton} type=\"submit\" value=\"Add contact\" />\n      </form>\n    );\n  // }\n}\n\nContactForm.prototypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from '../Filter/Filter.module.css';\n\nconst Filter = ({ filter, onChangeFilter }) => {\n\n  return (\n    \n    <label>\n      Find contact by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        autoComplete=\"off\"\n        value={filter}\n        onChange={onChangeFilter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from '../ContactList/ContactList.module.css';\nimport { TiUserDeleteOutline } from 'react-icons/ti';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n// console.log(contacts.map(contact=> contact))\n  \n  return (\n    <div>\n      <ul className={s.list}>\n        {contacts.map(contact => (\n\n          <li className={s.item} key={contact.id}>\n            \n            <p>\n              <span>{contact.name}:</span> <span>{contact.number}</span>\n            </p>\n\n            <button\n              className={s.buttonDelete}\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}     \n            >\n              <TiUserDeleteOutline color=\"red\" size=\"18px\" />\n\n            </button>\n\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func,\n};\nexport default ContactList;\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport contactsJson from './contacts.json';\n\nfunction App()  {\n \n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n\n  useEffect(() => {\n   \n    const contactsLocal = localStorage.getItem('contacts');\n    \n    contactsLocal ? setContacts(JSON.parse(contactsLocal))\n      : setContacts(contactsJson);\n  \n  }, []);\n\n  useEffect(() => {\n    \n   window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n \n\n  const formSubmitHandler = data => {\n    \n    return setContacts([data, ...contacts])\n  };\n   \n\n  const removeCoontactFromList = idRemoveContact => {  \n    \n    return setContacts([...contacts.filter(({ id }) => id !== idRemoveContact)])\n   \n  };\n\n  const changeFilter = e => {\n    \n    setFilter( e.currentTarget.value );\n  };\n\n  const visibleContacts = () => {\n    \n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  \n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n\n        <Container>\n          <ContactForm onSubmit={formSubmitHandler}></ContactForm>\n        </Container>\n\n        <Container title=\"Contacts\">\n          <Filter filter={filter} onChangeFilter={changeFilter}>\n            {' '}\n          </Filter>\n\n          {filter === '' ? (\n            <ContactList\n              contacts={contacts}\n              onDeleteContact={removeCoontactFromList}\n            ></ContactList>\n          ) : (\n            <ContactList\n              contacts={visibleContacts()}\n              onDeleteContact={removeCoontactFromList}\n            ></ContactList>\n          )}\n        </Container>\n      </div>\n    );\n  }\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3IHFH\",\"item\":\"ContactList_item__1zF6N\",\"buttonDelete\":\"ContactList_buttonDelete__wBS3w\"};"],"sourceRoot":""}